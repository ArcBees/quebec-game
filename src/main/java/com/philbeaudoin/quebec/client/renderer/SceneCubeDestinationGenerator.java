package com.philbeaudoin.quebec.client.renderer;

import javax.inject.Inject;

import com.philbeaudoin.quebec.shared.CubeDestination;
import com.philbeaudoin.quebec.shared.CubeDestinationInfluenceZone;
import com.philbeaudoin.quebec.shared.CubeDestinationVisitor;

/**
 * Use this class to generate the {@link SceneCubeDestination} corresponding to a given
 * {@link CubeDestination}.
 * @author Philippe Beaudoin <philippe.beaudoin@gmail.com>
 */
public class SceneCubeDestinationGenerator implements CubeDestinationVisitor {

  private final RendererFactories rendererFactory;
  private SceneCubeDestination sceneCubeDestination;

  @Inject
  public SceneCubeDestinationGenerator(RendererFactories rendererFactory) {
    this.rendererFactory = rendererFactory;
  }

  /**
   * Returns the {@link SceneCubeDestination} generated by this factory.
   * @return The scene cube destination generated by this factory, or {@code null} if the factory
   *     has not visited anything yet.
   */
  public SceneCubeDestination getSceneCubeDestination() {
    return sceneCubeDestination;
  }

  @Override
  public void visit(CubeDestinationInfluenceZone host) {
    sceneCubeDestination = rendererFactory.createSceneDestinationInfluenceZone(host);
  }
}
